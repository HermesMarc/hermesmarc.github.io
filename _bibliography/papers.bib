@inproceedings{hermesAnalysisTennenbaumTheorem2022a,
  title = {An {{Analysis}} of {{Tennenbaum}}'s {{Theorem}} in {{Constructive Type Theory}}},
  booktitle = {{{DROPS-IDN}}/v2/Document/10.4230/{{LIPIcs}}.{{FSCD}}.2022.9},
  author = {Hermes, Marc and Kirst, Dominik},
  year = {2022},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  doi = {10.4230/LIPIcs.FSCD.2022.9},
  url = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.FSCD.2022.9},
  urldate = {2024-03-23},
  abstract = {Tennenbaum's theorem states that the only countable model of Peano arithmetic (PA) with computable arithmetical operations is the standard model of natural numbers. In this paper, we use constructive type theory as a framework to revisit and generalize this result. The chosen framework allows for a synthetic approach to computability theory, by exploiting the fact that, externally, all functions definable in constructive type theory can be shown computable. We internalize this fact by assuming a version of Church's thesis expressing that any function on natural numbers is representable by a formula in PA. This assumption allows for a conveniently abstract setup to carry out rigorous computability arguments and feasible mechanization. Concretely, we constructivize several classical proofs and present one inherently constructive rendering of Tennenbaum's theorem, all following arguments from the literature. Concerning the classical proofs in particular, the constructive setting allows us to highlight differences in their assumptions and conclusions which are not visible classically. All versions are accompanied by a unified mechanization in the Coq proof assistant.},
  copyright = {https://creativecommons.org/licenses/by/4.0/legalcode},
  langid = {english},
  file = {/Users/nemo/Zotero/storage/ZW4ZBUJY/Hermes and Kirst - 2022 - An Analysis of Tennenbaumâ€™s Theorem in Constructiv.pdf}
}

@article{hermesAnalysisTennenbaumTheorem2024,
  selected = {true},
  title = {An {{Analysis}} of {{Tennenbaum}}'s {{Theorem}} in {{Constructive Type Theory}}},
  author = {Hermes, Marc and Kirst, Dominik},
  year = {2024},
  month = mar,
  journal = {Logical Methods in Computer Science},
  volume = {Volume 20, Issue 1},
  publisher = {Episciences.org},
  issn = {1860-5974},
  doi = {10.46298/lmcs-20(1:19)2024},
  url = {https://lmcs.episciences.org/13204},
  urldate = {2024-03-23},
  abstract = {Tennenbaum's theorem states that the only countable model of Peano arithmetic (PA) with computable arithmetical operations is the standard model of natural numbers. In this paper, we use constructive type theory as a framework to revisit, analyze and generalize this result. The chosen framework allows for a synthetic approach to computability theory, exploiting that, externally, all functions definable in constructive type theory can be shown computable. We then build on this viewpoint, and furthermore internalize it by assuming a version of Church's thesis, which expresses that any function on natural numbers is representable by a formula in PA. This assumption provides for a conveniently abstract setup to carry out rigorous computability arguments, even in the theorem's mechanization. Concretely, we constructivize several classical proofs and present one inherently constructive rendering of Tennenbaum's theorem, all following arguments from the literature. Concerning the classical proofs in particular, the constructive setting allows us to highlight differences in their assumptions and conclusions which are not visible classically. All versions are accompanied by a unified mechanization in the Coq proof assistant.},
  file = {/Users/nemo/Zotero/storage/QGCEFLRC/Hermes and Kirst - 2024 - An Analysis of Tennenbaum's Theorem in Constructiv.pdf}
}

@inproceedings{kirstSyntheticUndecidabilityIncompleteness2021,
  title = {Synthetic {{Undecidability}} and {{Incompleteness}} of {{First-Order Axiom Systems}} in {{Coq}}},
  booktitle = {{{DROPS-IDN}}/v2/Document/10.4230/{{LIPIcs}}.{{ITP}}.2021.23},
  author = {Kirst, Dominik and Hermes, Marc},
  year = {2021},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  doi = {10.4230/LIPIcs.ITP.2021.23},
  urldate = {2024-03-23},
  abstract = {We mechanise the undecidability of various first-order axiom systems in Coq, employing the synthetic approach to computability underlying the growing Coq Library of Undecidability Proofs. Concretely, we cover both semantic and deductive entailment in fragments of Peano arithmetic (PA) and Zermelo-Fraenkel set theory (ZF), with their undecidability established by many-one reductions from solvability of Diophantine equations, i.e. Hilbert's tenth problem (H10), and the Post correspondence problem (PCP), respectively. In the synthetic setting based on the computability of all functions definable in a constructive foundation, such as Coq's type theory, it suffices to define these reductions as meta-level functions with no need for further encoding in a formalised model of computation. The concrete cases of PA and ZF are prepared by a general synthetic theory of undecidable axiomatisations, focusing on well-known connections to consistency and incompleteness. Specifically, our reductions rely on the existence of standard models, necessitating additional assumptions in the case of full ZF, and all axiomatic extensions still justified by such standard models are shown incomplete. As a by-product of the undecidability of ZF formulated using only membership and no equality symbol, we obtain the undecidability of first-order logic with a single binary relation.},
  copyright = {https://creativecommons.org/licenses/by/4.0/legalcode},
  langid = {english},
  file = {/Users/nemo/Zotero/storage/BBR78C4S/Kirst and Hermes - 2021 - Synthetic Undecidability and Incompleteness of Fir.pdf}
}

@article{kirstSyntheticUndecidabilityIncompleteness2023,
  selected = {true},
  title = {Synthetic {{Undecidability}} and {{Incompleteness}} of {{First-Order Axiom Systems}} in {{Coq}}},
  author = {Kirst, Dominik and Hermes, Marc},
  year = {2023},
  month = mar,
  journal = {Journal of Automated Reasoning},
  volume = {67},
  number = {1},
  pages = {13},
  issn = {1573-0670},
  doi = {10.1007/s10817-022-09647-x},
  url = {https://link.springer.com/article/10.1007/s10817-022-09647-x},
  urldate = {2024-03-23},
  abstract = {We mechanise the undecidability of various first-order axiom systems in Coq, employing the synthetic approach to computability underlying the growing Coq Library of Undecidability Proofs. Concretely, we cover both semantic and deductive entailment in fragments of Peano arithmetic (PA) as well as ZF and related finitary set theories, with their undecidability established by many-one reductions from solvability of Diophantine equations, i.e. Hilbert's tenth problem (H10), and the Post correspondence problem (PCP), respectively. In the synthetic setting based on the computability of all functions definable in a constructive foundation, such as Coq's type theory, it suffices to define these reductions as meta-level functions with no need for further encoding in a formalised model of computation. The concrete cases of PA and the considered set theories are supplemented by a general synthetic theory of undecidable axiomatisations, focusing on well-known connections to consistency and incompleteness. Specifically, our reductions rely on the existence of standard models, necessitating additional assumptions in the case of full ZF, and all axiomatic extensions still justified by such standard models are shown incomplete. As a by-product of the undecidability of set theories formulated using only membership and no equality symbol, we obtain the undecidability of first-order logic with a single binary relation.},
  langid = {english},
  keywords = {Constructive type theory,Coq,First-order logic,Incompleteness,Peano arithmetic,Synthetic computability,Undecidability,ZF set theory},
  file = {/Users/nemo/Zotero/storage/PZMCMDE8/Kirst and Hermes - 2023 - Synthetic Undecidability and Incompleteness of Fir.pdf}
}
